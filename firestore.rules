rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regras para usuários
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Regras para caminhões
    match /trucks/{truckId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Regras para motoristas
    match /drivers/{driverId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll([
          'type', 'description', 'amount', 'date', 'category', 'userId'
        ]) &&
        request.resource.data.type in ['receita', 'despesa'] &&
        request.resource.data.amount is number &&
        request.resource.data.amount > 0;
    }
    
    match /trips/{tripId} {
      // Permitir leitura apenas para o proprietário
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Permitir criação com validações básicas
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll([
          'truckId', 'driverId', 'startLocation', 
          'startKm', 'startDate', 'status', 'userId'
        ]) &&
        request.resource.data.status == 'in_progress' &&
        request.resource.data.startKm is number &&
        request.resource.data.startKm >= 0;
      
      // Permitir atualizações para o proprietário
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Permitir exclusão para o proprietário
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Regras para máquinas pesadas
    match /machinery/{machineryId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll([
          'model', 'brand', 'serialNumber', 'year', 'type', 'status', 'hours', 'userId'
        ]) &&
        request.resource.data.type in ['tractor', 'excavator', 'loader', 'bulldozer', 'crane', 'other'] &&
        request.resource.data.status in ['active', 'maintenance', 'inactive'] &&
        request.resource.data.year is number &&
        request.resource.data.year >= 1990 &&
        request.resource.data.year <= 2030 &&
        request.resource.data.hours is number &&
        request.resource.data.hours >= 0;
    }
  }
}
